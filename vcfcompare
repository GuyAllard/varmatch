#!/usr/bin/env python

import sys

versionError = 'You are using an old version of python, please upgrade to python 2.7+\n'

if sys.hexversion < 0x02070000:
    print (versionError)
    exit()

import subprocess
import argparse
import os

citation = 'Please cite our paper'

parser = argparse.ArgumentParser(epilog = citation)
parser.add_argument('-r', '--reference', required=True, help='reference vcf file path')
parser.add_argument('-q', '--query', required=True, help='query vcf file path')
parser.add_argument('-g', '--genome', required=True, help='genome sequence file path, FASTA file format')
parser.add_argument('-t', '--thread', default='1', help='thread number for parallel')
parser.add_argument('-n', '--no_normalize', action='store_true', help='if activate, program will not normalize reference vcf and query vcf file before comparing')
parser.add_argument('-d', '--direct_search', action='store_true', help='if activate, only perform direct matching')
args = parser.parse_args()

def shell_run(command):
    if not RNU:
        time.sleep(3.5)
        print(command)
    else:
        print(command)
        subprocess.call(command, shell=True)

ref_vcf_filename = args.reference
que_vcf_filename = args.query
genome_filename = args.genome

if(not args.no_normalize):
    ref_vcf_filename = args.reference + '.norm'
    que_vcf_filename = args.query + '.norm'
    print('Normalizing reference vcf file...')
    normalize_command = './vt/vt normalize args.reference -r ' + genome_filename + ' -o ' + ref_vcf_filename
